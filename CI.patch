diff --git a/CI/compile_protos.sh b/CI/compile_protos.sh
index 181ed34..a62cc84 100755
--- a/CI/compile_protos.sh
+++ b/CI/compile_protos.sh
@@ -27,7 +27,11 @@ if [ $? -ne 0 ]; then
     echo "Could not find Python protoc plugin"
     exit 2
 fi
-
+GRPC_RUST_PLUGIN=$(which grpc_rust_plugin)
+if [ $? -ne 0 ]; then
+    echo "Could not find Rust protoc plugin"
+    exit 2
+fi
 set -e
 
 THIS_DIR=$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)
@@ -44,6 +48,7 @@ $PROTO_DIR/p4/v1/p4data.proto \
 $PROTO_DIR/p4/v1/p4runtime.proto \
 $PROTO_DIR/p4/config/v1/p4info.proto \
 $PROTO_DIR/p4/config/v1/p4types.proto \
+$PROTO_DIR/p4/tmp/p4config.proto \
 $GOOGLE_PROTO_DIR/google/rpc/status.proto \
 $GOOGLE_PROTO_DIR/google/rpc/code.proto"
 
@@ -61,6 +66,7 @@ $PROTOC $PROTOS --grpc_out $BUILD_DIR/grpc_out --plugin=protoc-gen-grpc=$GRPC_CP
 # plugin inserts code into the proto-generated files). But maybe I am just using
 # an old version of the Python plugin.
 $PROTOC $PROTOS --python_out $BUILD_DIR/py_out $PROTOFLAGS --grpc_out $BUILD_DIR/py_out --plugin=protoc-gen-grpc=$GRPC_PY_PLUGIN
+$PROTOC $PROTOS --rust_out $BUILD_DIR/rust_out $PROTOFLAGS --grpc_out $BUILD_DIR/rust_grpc_out --plugin=protoc-gen-grpc=$GRPC_RUST_PLUGIN
 set +o xtrace
 
 rm -rf $tmpdir
